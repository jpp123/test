<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.tedu</groupId>
  <artifactId>hibernate</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>hibernate Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <!-- springboot引入 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<!-- 字符集+jdk版本 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
	<!-- JPA@Table -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- 热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 在当下项目运行mvn spring-boot:run就可以直接启用一个嵌套了tomcat的web应用。默认端口8080对外监听和提供服务。 
			我们同样可以使用spring-boot-starter-jetty或者spring-boot-starter-undertow作为Web容器。 想改变默认的配置端口，可以在application.properties中指定： -->
		<dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
		<!-- <dependency>
   			 <groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency> -->
		
		<!-- jdbc驱动包 -->
		<!-- <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency> -->
		
		<dependency>
    		<groupId>com.oracle</groupId>
    		<artifactId>ojdbc6</artifactId>
    		<version>11.2.0.1.0</version>
		</dependency>
		<!-- <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency> -->
		<!-- 帮助你在Spring Boot项目中轻松集成Druid数据库连接池和监控。 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.0</version>
		</dependency>
		<!-- 访问静态页面 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- 允许不严格html5 -->
       <dependency>
    		<groupId>net.sourceforge.nekohtml</groupId>
    		<artifactId>nekohtml</artifactId>
    		<version>1.9.22</version>
		</dependency>
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.46</version>
        </dependency>
		
	</dependencies>
   
  <build>
    <finalName>hibernate</finalName>
  </build>
</project>
